# Generated by Django 2.1.15 on 2020-06-04 20:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('quality', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Braki',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_number', models.CharField(blank=True, db_column='part number', max_length=50, null=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('vendor', models.IntegerField(blank=True, db_column='Vendor', null=True)),
                ('idproceure', models.CharField(blank=True, max_length=10, null=True)),
                ('id_family', models.IntegerField(blank=True, db_column='id family', null=True)),
            ],
            options={
                'db_table': 'braki',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dimdate',
            fields=[
                ('thedate', models.DateField(db_column='TheDate', primary_key=True, serialize=False)),
                ('theday', models.IntegerField(blank=True, db_column='TheDay', null=True)),
                ('thedayname', models.CharField(blank=True, db_column='TheDayName', max_length=30, null=True)),
                ('theweek', models.IntegerField(blank=True, db_column='TheWeek', null=True)),
                ('theisoweek', models.IntegerField(blank=True, db_column='TheISOWeek', null=True)),
                ('thedayofweek', models.IntegerField(blank=True, db_column='TheDayOfWeek', null=True)),
                ('themonth', models.IntegerField(blank=True, db_column='TheMonth', null=True)),
                ('themonthname', models.CharField(blank=True, db_column='TheMonthName', max_length=30, null=True)),
                ('thequarter', models.IntegerField(blank=True, db_column='TheQuarter', null=True)),
                ('theyear', models.IntegerField(blank=True, db_column='TheYear', null=True)),
                ('thefirstofmonth', models.DateField(blank=True, db_column='TheFirstOfMonth', null=True)),
                ('thelastofyear', models.DateField(blank=True, db_column='TheLastOfYear', null=True)),
                ('thedayofyear', models.IntegerField(blank=True, db_column='TheDayOfYear', null=True)),
            ],
            options={
                'db_table': 'DimDate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dimproduct',
            fields=[
                ('partnumber', models.CharField(db_column='PartNumber', max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=50, null=True)),
                ('idtestprocedure', models.IntegerField(blank=True, db_column='IdTestProcedure', null=True)),
            ],
            options={
                'db_table': 'DimProduct',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dimproductfamily',
            fields=[
                ('idproductfamily', models.AutoField(db_column='IdProductFamily', primary_key=True, serialize=False)),
                ('familly', models.CharField(db_column='Familly', max_length=50)),
                ('superfamilly', models.CharField(db_column='SuperFamilly', max_length=50)),
                ('hiperfamilly', models.CharField(db_column='HiperFamilly', max_length=50)),
            ],
            options={
                'db_table': 'DimProductFamily',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dimsalesterritory',
            fields=[
                ('idterritory', models.AutoField(db_column='IdTerritory', primary_key=True, serialize=False)),
                ('salescountry', models.CharField(blank=True, db_column='SalesCountry', max_length=255, null=True)),
                ('reportingregionl2', models.CharField(blank=True, db_column='ReportingRegionL2', max_length=255, null=True)),
                ('reportingregion', models.CharField(blank=True, db_column='ReportingRegion', max_length=255, null=True)),
            ],
            options={
                'db_table': 'DimSalesTerritory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dimsupplier',
            fields=[
                ('idsupplier', models.IntegerField(db_column='IdSupplier', primary_key=True, serialize=False)),
                ('supplier', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'DimSupplier',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dimtechnican',
            fields=[
                ('idtechnican', models.IntegerField(db_column='IdTechnican', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=50)),
                ('surname', models.CharField(db_column='Surname', max_length=50)),
                ('email', models.CharField(db_column='Email', max_length=50)),
                ('phone', models.IntegerField(db_column='Phone')),
            ],
            options={
                'db_table': 'DimTechnican',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dimtestprocedure',
            fields=[
                ('idtestprocedure', models.IntegerField(db_column='IdTestProcedure', primary_key=True, serialize=False)),
                ('date', models.DateField(blank=True, db_column='Date', null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=50, null=True)),
                ('doc', models.BinaryField(blank=True, db_column='Doc', null=True)),
            ],
            options={
                'db_table': 'DimTestProcedure',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dimtesttools',
            fields=[
                ('idtool', models.IntegerField(db_column='IdTool', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=50)),
                ('quantity', models.IntegerField(db_column='Quantity')),
                ('defected', models.CharField(db_column='Defected', max_length=50)),
            ],
            options={
                'db_table': 'DimTestTools',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Factclaim',
            fields=[
                ('idclaim', models.IntegerField(db_column='IdClaim', primary_key=True, serialize=False)),
                ('claimnumber', models.CharField(blank=True, db_column='ClaimNumber', max_length=50, null=True)),
                ('refinvoice', models.IntegerField(db_column='RefInvoice')),
                ('milage', models.FloatField(blank=True, db_column='Milage', null=True)),
                ('aplication', models.CharField(blank=True, db_column='Aplication', max_length=500, null=True)),
                ('claimreason', models.TextField(blank=True, db_column='ClaimReason', null=True)),
                ('quantity', models.IntegerField(db_column='Quantity')),
                ('rejected', models.BooleanField(db_column='Rejected')),
                ('additionalcostvalue', models.DecimalField(blank=True, db_column='AdditionalCostValue', decimal_places=4, max_digits=19, null=True)),
                ('additionacostcurr', models.CharField(blank=True, db_column='AdditionaCostCurr', max_length=50, null=True)),
            ],
            options={
                'db_table': 'FactClaim',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Factclaimcases',
            fields=[
                ('idfactclaimcase', models.IntegerField(db_column='IdFactClaimCase', primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='Description', max_length=50)),
                ('manufacturedef', models.TextField(blank=True, db_column='ManufactureDef', null=True)),
                ('doc', models.BinaryField(blank=True, db_column='Doc', null=True)),
            ],
            options={
                'db_table': 'FactClaimCases',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Factsales',
            fields=[
                ('idsale', models.AutoField(db_column='IdSale', primary_key=True, serialize=False)),
                ('invoice', models.IntegerField(db_column='Invoice')),
                ('quantity', models.IntegerField(db_column='Quantity')),
                ('value', models.DecimalField(db_column='Value', decimal_places=4, max_digits=19)),
            ],
            options={
                'db_table': 'FactSales',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sysdiagrams',
            fields=[
                ('name', models.CharField(max_length=128)),
                ('principal_id', models.IntegerField()),
                ('diagram_id', models.AutoField(primary_key=True, serialize=False)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('definition', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sysdiagrams',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Temp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accnumber', models.IntegerField(blank=True, db_column='AccNumber', null=True)),
                ('invoice', models.IntegerField(blank=True, db_column='Invoice', null=True)),
                ('partnumber', models.CharField(blank=True, db_column='PartNumber', max_length=50, null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('value', models.DecimalField(blank=True, db_column='Value', decimal_places=4, max_digits=19, null=True)),
                ('date', models.DateField(blank=True, db_column='Date', null=True)),
            ],
            options={
                'db_table': 'temp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tesst',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accnumber', models.IntegerField(blank=True, db_column='AccNumber', null=True)),
                ('invoice', models.IntegerField(blank=True, db_column='Invoice', null=True)),
                ('partnumber', models.CharField(blank=True, db_column='PartNumber', max_length=20, null=True)),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('value', models.DecimalField(blank=True, db_column='Value', decimal_places=4, max_digits=19, null=True)),
                ('date', models.DateField(blank=True, db_column='Date', null=True)),
            ],
            options={
                'db_table': 'tesst',
                'managed': False,
            },
        ),
        migrations.AlterModelOptions(
            name='dimbussinesdev',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='dimclient',
            options={'managed': False},
        ),
        migrations.CreateModel(
            name='Dimtoolprocedure',
            fields=[
                ('idtestprocedure', models.ForeignKey(db_column='IdTestProcedure', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='quality.Dimtestprocedure')),
            ],
            options={
                'db_table': 'DimToolProcedure',
                'managed': False,
            },
        ),
    ]
